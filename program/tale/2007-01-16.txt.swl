1>Llamacorn

A couple days ago I was charged by Ryan Paul to produce a graphic for a llamacorn.  Since then, it has become an eagerly anticipated phenomenon, with a teething crowd of at least three awaiting its release.  Several celestial bodies had to arrange themselves to make its debut possible, but at last, I give you the < https://cixar.com/tale/wiki/Llamacorn llamacorn >.  Technical details follow.

In the vein that I loosed with <tt>svg-sort</tt>, <tt>svg-filter</tt> and the hitherto unmentioned <tt>svg-select</tt>, I postponed creation of the llamacorn until I had <tt>svg-cat</tt>.  What does it do?  <tt>svg-cat</tt> is a tool for "concatonating" SVG files, such that the layers of each successively supplied SVG file stack to form a unified image.  This is analogous to the command line tool <tt>cat</tt> which concatonates a list of files and renders them to standard output.  Now armed with a complete suite of SVG command line manipulation tools, I wrote two scripts for working with the now unwieldy <tt>sprite.svg</tt>: <tt>anomize</tt> and <tt>merge</tt>.  <tt>atomize</tt> takes the <tt>sprite.svg</tt> file and creates an individual SVG file for each layer, a la <tt>svg-select</tt> and <tt>svg-layers</tt>.  <tt>merge</tt> takes these layer files, sorts them with the sprite topological sort rules, and reconstitutes them into a single graphic, a la <tt>svg-cat</tt>.  This enables efficient augmentation and editing of the sprite graphic, because now I can pare out the layers that I want to work with (for example, heads if I want to add wigs), add the layers I want, atomize that graphic, then <tt>merge</tt>, and <tt>buildall</tt>.  Now I don't have to do tedious manual sorting <i>or</i> tedious manual hiding of irrelevant layers.  Also, I can now do spot checks of numerous layer configurations by automatically generating graphics from the newly constructed master image and making sure that the layer sorting rules are doing their job correctly.  All of these scripts are in the Tale repository in < https://cixar.com/svns/tale/bin > and < https://cixar.com/svns/tale/art/sprite >.

In the process of developing this utility, I spent 90% of my time hunting and killing a single bug, propagated by Inkscape.  Inkscape decided that it wouldn't render randomly selected cells if the loaded file was saved by a previous version of Inkscape, which hadn't the courtesy of adding an <tt>inkscape:version</tt> attribute to the SVG file.  This problem had to be fixed in a text editor (<tt>gvim</tt>) since Inkscape wouldn't migrate the file properly.  Furthermore, the problem had to be found by a binary search by selective replacement between a "corrected" and "flawed" version of the same graphic.  I think I might file a bug report.

< http://cixar.com/tale/art/sprite/llamacorn-400.png Llamacorn >

